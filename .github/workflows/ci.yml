name: .NET CI + Coverage (local report)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore

      - name: Run tests with coverage
        run: dotnet test tests/dotnet-ci.Tests.csproj --no-build --collect:"XPlat Code Coverage"

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.26 
        env:
          DOTNET_ROOT: /home/runner/.dotnet
          PATH: /home/runner/.dotnet/tools:/usr/bin:/bin

      - name: Generate coverage report
        run: |
          reportgenerator \
            -reports:tests/**/coverage.cobertura.xml \
            -targetdir:coverage-report \
            -reporttypes:Html
        env:
          PATH: /home/runner/.dotnet/tools:/usr/bin:/bin
      
      - name: Docker build
        run: docker build -t dotnet-ci-app .
      
      - name: Login to Docker Hub
        if: success()
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker push
        if: success()
        run: |
          docker tag dotnet-ci-app ${{ secrets.DOCKER_USERNAME }}/dotnet-ci-app
          docker push ${{ secrets.DOCKER_USERNAME }}/dotnet-ci-app
