name: .NET CI + Coverage (local report)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore

      - name: Run tests with coverage and save logs
        id: test
        continue-on-error: true
        run: |
          dotnet test tests/dotnet-ci.Tests.csproj --no-build --collect:"XPlat Code Coverage" 2>&1 | tee test-output.log


      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.26 
        env:
          DOTNET_ROOT: /home/runner/.dotnet
          PATH: /home/runner/.dotnet/tools:/usr/bin:/bin

      - name: Generate coverage report
        run: |
          reportgenerator \
            -reports:tests/**/coverage.cobertura.xml \
            -targetdir:coverage-report \
            -reporttypes:Html
        env:
          PATH: /home/runner/.dotnet/tools:/usr/bin:/bin
      
      - name: Docker build
        run: docker build -t dotnet-ci-app .
      
      - name: Login to Docker Hub.
        if: success()
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker push
        if: success()
        run: |
          docker tag dotnet-ci-app ${{ secrets.DOCKER_USERNAME }}/dotnet-ci-app
          docker push ${{ secrets.DOCKER_USERNAME }}/dotnet-ci-app
      

      - name: Enviar embed a Discord si pasa
        if: success()
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d '{
              "embeds": [{
                "title": "‚úÖ CI exitoso",
                "description": "**Repositorio:** [${{ github.repository }}](https://github.com/${{ github.repository }})\n**Rama:** `${{ github.ref_name }}`\n[üîó Ver run completo](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})",
                "color": 65280,
                "footer": {
                  "text": "Autor: ${{ github.actor }}"
                },
                "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
              }]
            }' \
            ${{ secrets.DISCORD_WEBHOOK_SUCCESS }}

      - name: IA explanation + Discord alert
        if: steps.test.outcome == 'failure'
        run: |
          echo "Capturando logs..."
          LOGS=$(tail -n 50 test-output.log | sed 's/"/\\"/g')

          echo "Enviando a OpenAI..."
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"model\": \"gpt-4\",
              \"messages\": [
                {
                  \"role\": \"system\",
                  \"content\": \"Explic√° errores de testing de .NET en forma simple y √∫til para un desarrollador junior.\"
                },
                {
                  \"role\": \"user\",
                  \"content\": \"Este es el error:\n\n$LOGS\"
                }
              ],
              \"temperature\": 0.6
            }")

          EXPLICACION=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')

          echo "Explicaci√≥n generada:"
          echo "$EXPLICACION"

          curl -X POST -H "Content-Type: application/json" \
            -d "{
              \"embeds\": [{
                \"title\": \"‚ùå Tests fallidos - explicaci√≥n de IA\",
                \"description\": \"**Repositorio:** [${{ github.repository }}](https://github.com/${{ github.repository }})\\n**Rama:** \`${{ github.ref_name }}\`\\n[üîç Ver run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\",
                \"color\": 16711680,
                \"fields\": [
                  { \"name\": \"Explicaci√≥n de la IA\", \"value\": \"$(echo "$EXPLICACION" | head -c 1000)\" }
                ],
                \"footer\": { \"text\": \"Autor: ${{ github.actor }}\" },
                \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
              }]
            }" \
            ${{ secrets.DISCORD_WEBHOOK_FAILURE }}
